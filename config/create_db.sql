CREATE SCHEMA IF NOT EXISTS esg;

CREATE TABLE IF NOT EXISTS esg.users(
    id VARCHAR(250) NOT NULL PRIMARY KEY,
    first_name VARCHAR(250) NULL,
    last_name VARCHAR(250) NULL,
    email VARCHAR(250) NULL,
    password VARCHAR(250) NULL,
    role CHAR(5) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 
);

CREATE TABLE IF NOT EXISTS esg.user_info(
    id int NOT NULL PRIMARY KEY AUTO_INCREMENT,
    email VARCHAR(250) NULL,
    code VARCHAR(250) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 
);

CREATE TABLE IF NOT EXISTS esg.forms(
    id int NOT NULL AUTO_INCREMENT,
    form_id VARCHAR(250) NULL,
    organization LONGTEXT NULL,
    data LONGTEXT NULL,
    user_id VARCHAR(250) NOT NULL,
    INDEX (user_id),
    FOREIGN KEY (user_id) REFERENCES users (id),
    PRIMARY KEY(id)  
);

CREATE TABLE IF NOT EXISTS esg.posts(
    id int NOT NULL AUTO_INCREMENT,
    title VARCHAR(250) NULL,
    source VARCHAR(64) NULL,
    release_date VARCHAR(24) NULL,
    image VARCHAR(250) NULL,
    category VARCHAR(16) NULL,
    content LONGTEXT NULL,
    content_type CHAR(4) NULL,
    page_id char(10) NULL,
    status char(10) NOT NULL,
    hot_news char(5) NULL,
    description LONGTEXT NULL,
    PRIMARY KEY(id)  
);

CREATE TABLE IF NOT EXISTS esg.tokens(
    email VARCHAR(250) NOT NULL PRIMARY KEY,
    token LONGTEXT NOT NULL,
    status CHAR(7) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 
);

CREATE TABLE IF NOT EXISTS esg.contacts(
    id INT NOT NULL AUTO_INCREMENT,
    full_name VARCHAR(250) NULL,
    phone_number INT NULL,
    message LONGTEXT NULL,
    email VARCHAR(250) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX (email),
    PRIMARY KEY(id)  
);